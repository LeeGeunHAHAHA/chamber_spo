#!/usr/bin/env bash

TIMEOUT=10

PF_DEV=/dev/nvme0
VF1_DEV=/dev/nvme1
VF2_DEV=/dev/nvme2
VF3_DEV=/dev/nvme3
VF4_DEV=/dev/nvme4

PF_ADDR=0000:01:00.0
VF1_ADDR=0000:01:00.1
VF2_ADDR=0000:01:00.2
VF3_ADDR=0000:01:00.3
VF4_ADDR=0000:01:00.4

export FQA_SPDK=

gcc shutdown.c -o shutdown

../../setup.sh reset > /dev/null
rmmod nvme nvme_core
modprobe nvme_core admin_timeout=1 io_timeout=1 multipath=0 max_retries=0
modprobe nvme

elapsed=0
while [[ ! -a $PF_DEV ]]
do
  sleep 1
  elapsed=$((elapsed + 1))
  if [[ $elapsed -ge $TIMEOUT ]]; then
    echo "controller not ready!"
    exit
  fi
done

echo 0 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs
sleep 1
nvme admin-passthru $PF_DEV --opcode=0xc5 --cdw10=1
sleep 1
echo 1 > /sys/bus/pci/devices/$PF_ADDR/reset
sleep 1
echo 2 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs
sleep 1

nvme id-ctrl $VF1_DEV | grep cntlid
nvme id-ctrl $VF2_DEV | grep cntlid

./shutdown $VF1_ADDR
./shutdown $VF2_ADDR

nvme id-ctrl $PF_DEV | grep ctlid
nvme smart-log $PF_DEV > /dev/null

echo 0 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs

sleep 1
nvme admin-passthru $PF_DEV --opcode=0xc5 --cdw10=1
sleep 1
echo 1 > /sys/bus/pci/devices/$PF_ADDR/reset
sleep 1
echo 2 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs
sleep 1

nvme id-ctrl $VF1_DEV | grep cntlid
nvme id-ctrl $VF2_DEV | grep cntlid

./shutdown $VF1_ADDR
./shutdown $VF2_ADDR

nvme id-ctrl $PF_DEV | grep ctlid
nvme smart-log $PF_DEV > /dev/null

echo 0 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs

sleep 1
nvme admin-passthru $PF_DEV --opcode=0xc5 --cdw10=1
sleep 1
echo 1 > /sys/bus/pci/devices/$PF_ADDR/reset
sleep 1
echo 2 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs
sleep 1

nvme id-ctrl $VF1_DEV | grep cntlid
nvme id-ctrl $VF2_DEV | grep cntlid

./shutdown $VF1_ADDR
./shutdown $VF2_ADDR

nvme id-ctrl $PF_DEV | grep ctlid
nvme smart-log $PF_DEV > /dev/null

echo 0 > /sys/bus/pci/devices/$PF_ADDR/sriov_numvfs

rm -rf shutdown
