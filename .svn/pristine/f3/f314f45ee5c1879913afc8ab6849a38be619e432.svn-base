#!/usr/bin/env bash
source ../../common > /dev/null 2>&1

# initialize
nvme delete-ns $FQA_DEVICE -n 0xffffffff
nvme create-ns $FQA_DEVICE -s 0x100000 -c 0x100000 -f $FLBAS_4096
nvme attach-ns $FQA_DEVICE -n 1 -c $CTRL_ID

rescan-ns

# TODO: remove below lines if the newly created namespace is filled with unwritten lba
nvme dsm $FQA_DEVICE -n 1 -s 0 -b 0x200 -ad
nvme dsm $FQA_DEVICE -n 1 -s 0xf00 -b 0x300 -ad

# write zeroes(to unwritten lba)
nvme write-zeroes $FQA_DEVICE -n 1 -s 0 -c 255

# read and verify - ssuccess with zeroes
nvme read $FQA_DEVICE -n 1 -s 0 -c 0 -z 4 | xxd -p -l 4
nvme read $FQA_DEVICE -n 1 -s 255 -c 0 -z 4 | xxd -p -l 4

# write data
echo "abcd" | nvme write $FQA_DEVICE -n 1 -s 0x1000 -c 255 -z 4

# read and verify - success with no zero
nvme read $FQA_DEVICE -n 1 -s 0x1000 -c 255 -z 4 | xxd -p -l 4

# write zeroes(to written lba)
nvme write-zeroes $FQA_DEVICE -n 1 -s 0x1000 -c 255

# read and verify - success with zeroes
nvme read $FQA_DEVICE -n 1 -s 0x1000 -c 255 -z 4 | xxd -p -l 4

# write zeroes(again)
nvme write-zeroes $FQA_DEVICE -n 1 -s 0x1000 -c 255                     # 0x1000 - 0x10ff

# read and verify - success with zeroes
nvme read $FQA_DEVICE -n 1 -s 0x1000 -c 0255 -z 4 | xxd -p -l 4

# read neighborhood lbas - success
nvme read $FQA_DEVICE -n 1 -s 0xfff -c 0 -z 4 | xxd -p -l 4
nvme read $FQA_DEVICE -n 1 -s 0x1100 -c 0 -z 4 | xxd -p -l 4

# read lba range including zeroed bla - success
nvme read $FQA_DEVICE -n 1 -s 0xff8 -c 0x10 -z 4 | xxd -p -l 4          # 0xff8 - 0x1108
nvme read $FQA_DEVICE -n 1 -s 0x10ff -c 0x10 -z 4 | xxd -p -l 4         # 0x10ff - 0x110f
nvme read $FQA_DEVICE -n 1 -s 0xfff -c 1 -z 4 | xxd -p -l 4             # 0xfff, 0x1000
nvme read $FQA_DEVICE -n 1 -s 0x10ff -c 1 -z 4 | xxd -p -l 4            # 0x10ff, 0x1100
