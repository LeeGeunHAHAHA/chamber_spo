#!/bin/bash
source ../common
GROUP_TITLE="SPO at Normal Power Off"
PARAM_FILE=parameter
SEED=1
TITLE='OPERATION=$OPERATION LBA_RANGE=$LBA_RANGE AMOUNT=$AMOUNT SLBA=$SLBA IOSIZE=$IOSIZE IODEPTH=$IODEPTH'
NLBS=16
START_PERCENT=0
TEST_WINDOW_PERCENT=100
#AMOUNT_TIME=30m
#SPOR_TIME=15m
AMOUNT_TIME=1m
SPOR_TIME_MIN=15
SPOR_TIME_MAX=30
AMOUNT_RD_PERCENT=100
IODEPTH_RD=32
IODEPTH_WR=32
IODEPTH_MAX=64
LBASIZE=512
SPO_AT_NPO_MSEC_MIN=0
SPO_AT_NPO_MSEC_MAX=4000
SPO_AT_NPO_CNT=0
SPO_AT_NPO_RATIO=1
FULL_VERIFY_CYCLE=50

group_init $@

ulimit -c unlimited



power_off
reset_spdk
power_on
enable_spdk

run_config
clean_journal
format_512b

#IOSIZE_WR=$NAMESPACE_BSZ
IOSIZE_WR_MIN=512b
IOSIZE_WR=128K
IOSIZE_RD_REPLAY=512b
IOSIZE_RD_FULL=128K

#echo "namespace_bsz    : $NAMESPACE_BSZ"
#echo "namespace_size   : $NAMESPACE_SIZE"
#echo "namspacee_size_gb: $NAMESPACE_SIZE_GB"
#echo "IOSIZE_WR         : $IOSIZE_WR" 
#echo "IOSIZE_RD         : $IOSIZE_RD" 

for ((i=1;i<10000;i++))
do
	echo -e "\n\n*********************** [$i/10000] ***********************\n\n"

	# START_PWRCYC=$(get_power_cycles_count)
	# START_UNSAFE=$(get_unsafe_shutdowns_count)

	# echo "Power Cycles 		: $START_PWRCYC"
	# echo "Unsafe Shutdowns 	: $START_UNSAFE"

	# write only
	OPERATION=write

	# mixed
	#OPERATION=read:20,write:78,deallocate:2
	#OPERATION=write:98,deallocate:2
	#OPERATION=read:100

	LBA_RANGE="$START_PERCENT%:$TEST_WINDOW_PERCENT%"
	AMOUNT="TIME:$AMOUNT_TIME"
	SLBA=uniform
	IOSIZE="$IOSIZE_WR_MIN-$IOSIZE_WR"
	IODEPTH=$IODEPTH_WR
	NBIO_BG=1
	OPERATION=$OPERATION LBA_RANGE=$LBA_RANGE AMOUNT=$AMOUNT SLBA=$SLBA IOSIZE=$IOSIZE IODEPTH=$IODEPTH SEED=$SEED run_test

	SPOR_TIME=$(( ( RANDOM % (SPOR_TIME_MAX - SPOR_TIME_MIN) ) + SPOR_TIME_MIN ))

	echo "*** nbio running on background (pid $NBIO_BG_PID) ***"
	echo "*** sudden power off after $SPOR_TIME secs***"
	sleep $SPOR_TIME

	# normal power off
	spo_at_npo
	reset_spdk
	power_on
	enable_spdk

	# END_PWRCYC=$(get_power_cycles_count)
	# END_UNSAFE=$(get_unsafe_shutdowns_count)

	# echo "Power Cycles 		: $END_PWRCYC"
	# echo "Unsafe Shutdowns 	: $END_UNSAFE"

	# DIFF_PWRCYC=$(($END_PWRCYC - $START_PWRCYC))
	# DIFF_UNSAFE=$(($END_UNSAFE - $START_UNSAFE))

	# if [ $DIFF_PWRCYC -ne 1 ]; then
	# 	printf "$FAIL - power cycles must be increased!"
	# 	exit -1
	# fi

	# if [ $DIFF_UNSAFE -ne 1 ]; then
	# 	printf "$FAIL - unsafe shutdowns must be increased!"
	# 	exit -1
	# fi

	# read (replay verify)
	OPERATION=read
	SLBA=replay
	AMOUNT="INFINITE"
	IOSIZE=$IOSIZE_RD_REPLAY			# Don't Care
	IODEPTH=$IODEPTH_MAX		# Don't Care
	NBIO_BG=0
	OPERATION=$OPERATION LBA_RANGE=$LBA_RANGE AMOUNT=$AMOUNT SLBA=$SLBA IOSIZE=$IOSIZE IODEPTH=$IODEPTH SEED=$SEED run_test

	if [ $((i % FULL_VERIFY_CYCLE)) -eq 0 ]; then
		# read (full verify)
		OPERATION=read
		AMOUNT="BYTE:$AMOUNT_RD_PERCENT%"
		SLBA=seq
		IOSIZE=$IOSIZE_RD_FULL
		IODEPTH=$IODEPTH_MAX
		OPERATION=$OPERATION LBA_RANGE=$LBA_RANGE AMOUNT=$AMOUNT SLBA=$SLBA IOSIZE=$IOSIZE IODEPTH=$IODEPTH SPOR_LEVEL=$SPOR_LEVEL SEED=$SEED run_test
	fi

	SEED=$((SEED + 1))
done
