#!/usr/bin/env bash
source ../../common > /dev/null 2>&1

# initialize
nvme delete-ns $FQA_DEVICE -n 0xffffffff
nvme create-ns $FQA_DEVICE -s 0x100000 -c 0x100000 -f $FLBAS_4096
nvme attach-ns $FQA_DEVICE -n 1 -c $CTRL_ID

rescan-ns

# TODO: remove below lines if the newly created namespace is filled with unwritten lba
nvme dsm $FQA_DEVICE -n 1 -s 0 -b 0x100 -ad

# write zeroes(to unwritten lba)
nvme write-zeroes $FQA_DEVICE -n 1 -s 0 -c 0

# read and verify - success with zeroes
nvme read $FQA_DEVICE -n 1 -s 0 -c 0 -z 4 | xxd -p -l 4

# write data
echo "abcd" | nvme write $FQA_DEVICE -n 1 -s 10 -c 0 -z 4

# read and verify - success with non zero
nvme read $FQA_DEVICE -n 1 -s 10 -c 0 -z 4 | xxd -p -l 4

# write zeroes(to written lba)
nvme write-zeroes $FQA_DEVICE -n 1 -s 10 -c 0

# read and verify - success with zeroes
nvme read $FQA_DEVICE -n 1 -s 10 -c 0 -z 4 | xxd -p -l 4

# write zeroes(again)
nvme write-zeroes $FQA_DEVICE -n 1 -s 10 -c 0

# read and verify - success with zeroes
nvme read $FQA_DEVICE -n 1 -s 10 -c 0 -z 4 | xxd -p -l 4

# read neighborhood lbas - success with non zero
nvme read $FQA_DEVICE -n 1 -s 9 -c 0 -z 4 | xxd -p -l 4
nvme read $FQA_DEVICE -n 1 -s 11 -c 0 -z 4 | xxd -p -l 4

# read lba range including zeroed lba - success
nvme read $FQA_DEVICE -n 1 -s 5 -c 10 -z 4 | xxd -p -l 4            # 5 - 15
nvme read $FQA_DEVICE -n 1 -s 10 -c 10 -z 4 | xxd -p -l 4           # 10 - 20
nvme read $FQA_DEVICE -n 1 -s 9 -c 1 -z 4 | xxd -p -l 4             # 9, 10
nvme read $FQA_DEVICE -n 1 -s 10 -c 1 -z 4 | xxd -p -l 4            # 10, 11
